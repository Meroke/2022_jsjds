
<launch>
  <arg name="mapping_mode"  default="gmapping" doc="opt: gmapping, hector,cartographer,karto"/>
  
  <!-- 开启机器人底层相关节点  -->
  <include file="$(find turn_on_wheeltec_robot)/launch/turn_on_wheeltec_robot.launch" />
  <!-- 开启gmapping建图算法  -->
  <group if="$(eval mapping_mode == 'gmapping')">
  <include file="$(find turn_on_wheeltec_robot)/launch/include/algorithm_gmapping.launch" />
  </group>
  <!-- 开启hector建图算法  -->
  <group if="$(eval mapping_mode == 'hector')">
  <include file="$(find turn_on_wheeltec_robot)/launch/include/algorithm_hector.launch" />
  </group>  
   <!-- 开启karto建图算法  -->
  <group if="$(eval mapping_mode == 'karto')">
  <include file="$(find turn_on_wheeltec_robot)/launch/include/algorithm_karto.launch" />
  </group>  
   <!-- 开启cartographer建图算法  -->
  <group if="$(eval mapping_mode == 'cartographer')">
  <!--这个功能包的路径是：/opt/ros/melodic/share/cartographer_ros-->
  <include file="$(find cartographer_ros)/launch/demo_revo_lds.launch" />
  </group>  

   <!-- 开启用于导航的自适应蒙特卡洛定位amcl_omni  运动方式是omni不是diff-->
   <include file="$(find turn_on_wheeltec_robot)/launch/include/amcl_omni.launch" />
  <!-- 开启tel_local_planner导航算法-一般用于全向移动阿克曼等车-->
   <include file="$(find turn_on_wheeltec_robot)/launch/include/tel_local_planner.launch" />

 <!-- 开启用于导航的自适应蒙特卡洛定位amcl 运动方式是diff -->
   <!--include file="$(find turn_on_wheeltec_robot)/launch/include/amcl.launch" /-->
  <!-- 开启dwa_local_planner导航算法 一般用于差速车-->
   <!--include file="$(find turn_on_wheeltec_robot)/launch/include/dwa_local_planner.launch" /-->
  <node name='send_mark' pkg="turn_on_wheeltec_robot" type="send_mark.py">
  </node>
  
</launch>
